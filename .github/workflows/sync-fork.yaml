name: Sync Fork with Upstream

on:
  # Allow manual triggering
  workflow_dispatch:

  # Run on a schedule (daily at 2 AM UTC)
  schedule:
    - cron: "0 2 * * *"

  # Run when changes are pushed to main in upstream
  # This requires the workflow to be present in the fork
  repository_dispatch:
    types: [upstream-sync]

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    # Only run in forks, not in the original repository
    if: github.event.repository.fork == true

    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/${{ github.event.repository.parent.full_name }}.git || true
          git remote -v

      - name: Fetch upstream changes
        run: |
          git fetch upstream

      - name: Check for updates
        id: check
        run: |
          # Get the default branch of upstream
          UPSTREAM_BRANCH=$(git remote show upstream | grep 'HEAD branch' | cut -d' ' -f5)
          echo "upstream_branch=$UPSTREAM_BRANCH" >> $GITHUB_OUTPUT

          # Check if there are new commits
          LOCAL_COMMIT=$(git rev-parse HEAD)
          UPSTREAM_COMMIT=$(git rev-parse upstream/$UPSTREAM_BRANCH)

          if [ "$LOCAL_COMMIT" = "$UPSTREAM_COMMIT" ]; then
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "Fork is already up to date with upstream"
          else
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "Updates available from upstream"
          fi

      - name: Merge upstream changes
        if: steps.check.outputs.has_updates == 'true'
        run: |
          UPSTREAM_BRANCH=${{ steps.check.outputs.upstream_branch }}

          # Try to merge upstream changes
          if git merge upstream/$UPSTREAM_BRANCH --no-edit; then
            echo "✓ Successfully merged upstream changes"
          else
            echo "✗ Merge conflict detected"
            echo "Please resolve conflicts manually"
            git merge --abort
            exit 1
          fi

      - name: Push changes
        if: steps.check.outputs.has_updates == 'true'
        run: |
          git push origin HEAD
          echo "✓ Fork synced successfully with upstream"

      - name: Create sync summary
        if: always()
        run: |
          echo "## Fork Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check.outputs.has_updates }}" = "true" ]; then
            echo "✓ Fork has been synced with upstream repository" >> $GITHUB_STEP_SUMMARY
            echo "- Upstream: ${{ github.event.repository.parent.full_name }}" >> $GITHUB_STEP_SUMMARY
            echo "- Branch: ${{ steps.check.outputs.upstream_branch }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ Fork is already up to date with upstream" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            // This will only work if there are open issues/PRs
            console.log('Sync failed. Manual intervention may be required.');
            console.log('Check the Actions tab for details.');
